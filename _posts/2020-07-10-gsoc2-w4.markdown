---
layout: post
title:  "GSoC'20 - Differentiating conic programs"
date:   2020-07-10 14:00:00 -0500
---


# Solving and differentiating convex conic programs w.r.t. problem data, improving solver interface, and benchmarking with diffcp

Hi all! This blog is one of a series marking my progress in [Differentiable Optimization Problems](https://summerofcode.withgoogle.com/projects/#5232064888045568).
You may enjoy reading [my first blog](http://www.imakshay.com/post/8). In this post, I will briefly describe how we enabled [DiffOpt.jl](https://github.com/AKS1996/DiffOpt.jl) to differentiate a conic program with an [SOCP constraint](https://en.wikipedia.org/wiki/Second-order_cone_programming) and improved the interface by adding more tests.


## The project - progress
Milestones completed:
1. Testing solver for quadratic programs [contquadratic.jl](https://github.com/jump-dev/MathOptInterface.jl/blob/master/src/Test/contquadratic.jl) - [PR#19](https://github.com/AKS1996/DiffOpt.jl/pull/19) 
2. Find projections (and derivatives) on dual cones. Differentiate a simple conic program with an SOCP constraint [Issue#24](https://github.com/AKS1996/DiffOpt.jl/issues/24) - [PR#26](https://github.com/AKS1996/DiffOpt.jl/pull/26) 
3. Add several MOI tests to improve solver interface - [PR#28](https://github.com/AKS1996/DiffOpt.jl/pull/28)


## What's next?
For the next two weeks, we'll focus on
1. Differentating conic programs with [SDP constraints](https://en.wikipedia.org/wiki/Semidefinite_programming)
2. Benchmark differentiation of conic programs with [diffcp](https://github.com/cvxgrp/diffcp)


### Staying in touch
If you're interested in knowing more about the project, join the `#opt-diff-gsoc` channel on [julia slack](https://discourse.julialang.org/t/announcing-a-julia-slack/4866).
